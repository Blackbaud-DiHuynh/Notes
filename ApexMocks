APEXMOCKS


Links:
  Setup in dev orgs: 
    http://jessealtman.com/2014/06/apexmocks-setup/

  Running ApexMocks generator:
    https://code4cloud.wordpress.com/2014/06/27/new-improved-apex-mocks-generator/

  Dependencies in Unit Test:
    https://code4cloud.wordpress.com/2014/05/15/stubbing-dependencies-in-a-unit-test/ Tutorials/examples: http://jessealtman.com/2014/06/real-unit-tests-using-apexmocks/ 
  Github repo:
    https://github.com/financialforcedev/fflib-apex-mocks

About: 
  based on Mockjito
 
Dependency Injection
  allows programs to be loosely coupled
  3 forms: setter-, interface-, and constructor-based

  Advantages: 
    can be used in legacy code for refactoring
    easier to unit test
    allows a client to remove all concrete implementation that it needs to use
    can be used to externalize a system's configuration details into configuration allowing the system to be reconfigured wi/o recompilation
    reduction of boilerplate code
    concurrent/independent development
    decreases coupling
  
  Disadvantages:
    makes code hard to read since it separates behavior from construction
    diminishes encapsulation by requiring users of a system to know how it work and not merely what task or job it performs. 


Focuses for us:
  reduce DML operations in unit tests
  


SETUP STEPS:
  Install ANT
    sudo apt-get install ant
    add 'export ANT_HOME='/usr/local/ant'' to .bashrc

  Install Force.com Migration Tools
    Setup -> Develop -> Tools -> download zip file for Force.com Migration Tools
    unzip
    go to the sample directory, in build.properties, add your SF credentials, make sure to append security token at the end of your password
    run 'ant test' in the sample directory

    Go to dev org, setup -> Create -> Objects. Check to see if myObj is listed. 

  Install 
    clone the fflib-apex-mocks repo. 
    copy build.xml, build.properties, ant-salesforce.jar to the fflib-apex-mocks folder
    run 'ant deployApexMocks'
    Go to dev org, setup -> Develop -> Apex Classes -> click on the letter F
    Make sure you see the following classes: 
      fflib_ApexMocks
      fflib_ApexMocksTest
      fflib_IDGenerator
      fflib_IDGeneratorTest
      fflib_MethodCountRecorder
      fflib_MethodReturnValue
      fflib_MethodReturnValueRecorder
      fflib_Mocks
      fflib_MyList
